mu_age <- attr(x = data$age, which = "scaled:center")
sd_age <- attr(x = data$age, which = "scaled:scale")
age <- 40 + time
age <- (age - mu_age) / sd_age
X_tilde <- matrix(data = c(age), ncol = 1, byrow = F)
X <- matrix(data = c(age, rep(1, length(time)), rep(0.5, length(time)), rep(1.2, length(time))), ncol = 4, byrow = F)
res <- result_processing(fit = fit, model = model, time = time, X_tilde = X_tilde, X = X)
excHaz    <- res$excHaz
excCumHaz <- res$excCumHaz
netSur    <- res$netSur
rstan:::rstudio_stanc("MODELS/stan_functions.stan")
region <- 1
par(family = 'LM Roman 10', mfrow = c(1, 1))
plot_summary_curve(time = time, obj = excHaz, region = region, ylab = "Excess Hazard", dist = dist, return_values = T)
plot_summary_curve(time = time, obj = excCumHaz, region = region, ylab = "Excess Cumulative Hazard", dist = dist, return_values = T)
plot_summary_curve(time = time, obj = netSur, region = region, dist = dist, return_values = T)
par(family = 'LM Roman 10', mfrow = c(1, 3))
pL <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "L", title = "Net Survival (.025)", commom_legend = T)
pM <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "M", title = "Net Survival (mean)", commom_legend = T)
pU <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "U", title = "Net Survival (.975)", commom_legend = T)
grid.arrange(pL, pM, pU, nrow = 1, ncol = 3)
pL <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "L", title = "Net Survival (.025)", commom_legend = T)
pM <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "M", title = "Net Survival (mean)", commom_legend = F)
pU <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "U", title = "Net Survival (.975)", commom_legend = T)
grid.arrange(pL, pM, pU, nrow = 1, ncol = 3)
source("header.R")
data <- readRDS(file = "DATA/leuk.rds")
# Optional
data$age <- scale(data$age)
data$wbc <- scale(data$wbc)
data$dep <- scale(data$dep)
map <- readRDS(file = "DATA/nwengland_map.rds")
adj_info <- adj_list(map = map)
model <- "LN_ABDD"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
d <- data_stan(data = data, model = model, cov.tilde = c("age"), cov = c("age", "wbc", "sex", "dep"), nonlinear = c(), adj_info = adj_info)
r <- fit_stan(data = d, model = model)
fit <- r$fit
print(fit, pars = c("log_lik"), include = F)
# saveRDS(object = fit, file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
source("header.R")
data <- readRDS(file = "DATA/leuk.rds")
# Optional
data$age <- scale(data$age)
data$wbc <- scale(data$wbc)
data$dep <- scale(data$dep)
map <- readRDS(file = "DATA/nwengland_map.rds")
adj_info <- adj_list(map = map)
model <- "LN_ABDD"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
d <- data_stan(data = data, model = model, cov.tilde = c("age"), cov = c("age", "wbc", "sex", "dep"), nonlinear = c(), adj_info = adj_info)
r <- fit_stan(data = d, model = model)
fit <- r$fit
print(fit, pars = c("log_lik"), include = F)
## Model comparison
loo <- compute_loo(fit = fit)
print(loo)
time <- seq(from = 0.025, to = 4, by = 0.025)
mu_age <- attr(x = data$age, which = "scaled:center")
sd_age <- attr(x = data$age, which = "scaled:scale")
age <- 40 + time
age <- (age - mu_age) / sd_age
X_tilde <- matrix(data = c(age), ncol = 1, byrow = F)
X <- matrix(data = c(age, rep(1, length(time)), rep(0.5, length(time)), rep(1.2, length(time))), ncol = 4, byrow = F)
res <- result_processing(fit = fit, model = model, time = time, X_tilde = X_tilde, X = X)
excHaz    <- res$excHaz
excCumHaz <- res$excCumHaz
netSur    <- res$netSur
plot_summary_curve(time = time, obj = excHaz, region = region, ylab = "Excess Hazard", dist = dist, return_values = T)
region <- 1
par(family = 'LM Roman 10', mfrow = c(1, 1))
plot_summary_curve(time = time, obj = excHaz, region = region, ylab = "Excess Hazard", dist = dist, return_values = T)
plot_summary_curve(time = time, obj = excCumHaz, region = region, ylab = "Excess Cumulative Hazard", dist = dist, return_values = T)
plot_summary_curve(time = time, obj = netSur, region = region, dist = dist, return_values = T)
par(family = 'LM Roman 10', mfrow = c(1, 3))
pL <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "L", title = "Net Survival (.025)", commom_legend = T)
pM <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "M", title = "Net Survival (mean)", commom_legend = T)
pU <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "U", title = "Net Survival (.975)", commom_legend = T)
grid.arrange(pL, pM, pU, nrow = 1, ncol = 3)
source("header.R")
data <- readRDS(file = "DATA/leuk.rds")
# Optional
data$age <- scale(data$age)
data$wbc <- scale(data$wbc)
data$dep <- scale(data$dep)
map <- readRDS(file = "DATA/nwengland_map.rds")
adj_info <- adj_list(map = map)
model <- "LL_ABDD"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
d <- data_stan(data = data, model = model, cov.tilde = c("age"), cov = c("age", "wbc", "sex", "dep"), nonlinear = c(), adj_info = adj_info)
r <- fit_stan(data = d, model = model)
fit <- r$fit
print(fit, pars = c("log_lik"), include = F)
# saveRDS(object = fit, file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
## Model comparison
loo <- compute_loo(fit = fit)
# loo_compare(list(M1 = loo1, M2 = loo2))
bridge <- bridge_sampler(samples = fit, cores = getOption(x = "mc.cores", default = detectCores()), silent = T)
# bayes_factor(x1 = bridge1, x2 = bridge2)
# saveRDS(object = bridge, file = paste("FITTED_MODELS/", dist, "/bridge_", model, ".rds", sep = ""))
## Result processing
time <- seq(from = 0.025, to = 4, by = 0.025)
mu_age <- attr(x = data$age, which = "scaled:center")
sd_age <- attr(x = data$age, which = "scaled:scale")
age <- 40 + time
age <- (age - mu_age) / sd_age
X_tilde <- matrix(data = c(age), ncol = 1, byrow = F)
X <- matrix(data = c(age, rep(1, length(time)), rep(0.5, length(time)), rep(1.2, length(time))), ncol = 4, byrow = F)
res <- result_processing(fit = fit, model = model, time = time, X_tilde = X_tilde, X = X)
excHaz    <- res$excHaz
excCumHaz <- res$excCumHaz
netSur    <- res$netSur
## Visualization
region <- 1
par(family = 'LM Roman 10', mfrow = c(1, 1))
plot_summary_curve(time = time, obj = excHaz, region = region, ylab = "Excess Hazard", dist = dist, return_values = T)
plot_summary_curve(time = time, obj = excCumHaz, region = region, ylab = "Excess Cumulative Hazard", dist = dist, return_values = T)
plot_summary_curve(time = time, obj = netSur, region = region, dist = dist, return_values = T)
plot_all_regions(time = time, obj = excHaz, N_reg = N_reg, ylab = "Excess Hazard", dist = dist, return_values = T)
plot_all_regions(time = time, obj = excCumHaz, N_reg = N_reg, ylab = "Excess Cumulative Hazard", dist = dist, pos_legend = "topleft", return_values = T)
plot_all_regions(time = time, obj = netSur, N_reg = N_reg, dist = dist, return_values = T)
par(family = 'LM Roman 10', mfrow = c(1, 3))
pL <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "L", title = "Net Survival (.025)", commom_legend = T)
pM <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "M", title = "Net Survival (mean)", commom_legend = T)
pU <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "U", title = "Net Survival (.975)", commom_legend = T)
grid.arrange(pL, pM, pU, nrow = 1, ncol = 3)
grid.arrange(pL, pM, pU, nrow = 1, ncol = 3)
par(family = 'LM Roman 10', mfrow = c(1, 3))
pL <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "L", title = "Net Survival (.025)", commom_legend = T)
pM <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "M", title = "Net Survival (mean)", commom_legend = T)
pU <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "U", title = "Net Survival (.975)", commom_legend = T)
grid.arrange(pL, pM, pU, nrow = 1, ncol = 3)
rstan:::rstudio_stanc("MODELS/stan_functions.stan")
rstan:::rstudio_stanc("MODELS/stan_functions.stan")
rstan:::rstudio_stanc("MODELS/stan_functions.stan")
source("header.R")
data <- readRDS(file = "DATA/leuk.rds")
# Optional
data$age <- scale(data$age)
data$wbc <- scale(data$wbc)
data$dep <- scale(data$dep)
map <- readRDS(file = "DATA/nwengland_map.rds")
adj_info <- adj_list(map = map)
model <- "LL_ABCD"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
d <- data_stan(data = data, model = model, cov.tilde = c("age"), cov = c("age", "wbc", "sex", "dep"), nonlinear = c(), adj_info = adj_info)
r <- fit_stan(data = d, model = model)
fit <- r$fit
print(fit, pars = c("log_lik"), include = F)
# saveRDS(object = fit, file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
## Model comparison
loo <- compute_loo(fit = fit)
# loo_compare(list(M1 = loo1, M2 = loo2))
bridge <- bridge_sampler(samples = fit, cores = getOption(x = "mc.cores", default = detectCores()), silent = T)
# bayes_factor(x1 = bridge1, x2 = bridge2)
# saveRDS(object = bridge, file = paste("FITTED_MODELS/", dist, "/bridge_", model, ".rds", sep = ""))
## Result processing
time <- seq(from = 0.025, to = 4, by = 0.025)
mu_age <- attr(x = data$age, which = "scaled:center")
sd_age <- attr(x = data$age, which = "scaled:scale")
age <- 40 + time
age <- (age - mu_age) / sd_age
X_tilde <- matrix(data = c(age), ncol = 1, byrow = F)
X <- matrix(data = c(age, rep(1, length(time)), rep(0.5, length(time)), rep(1.2, length(time))), ncol = 4, byrow = F)
res <- result_processing(fit = fit, model = model, time = time, X_tilde = X_tilde, X = X)
excHaz    <- res$excHaz
excCumHaz <- res$excCumHaz
netSur    <- res$netSur
## Visualization
region <- 1
par(family = 'LM Roman 10', mfrow = c(1, 1))
region <- 1
par(family = 'LM Roman 10', mfrow = c(1, 1))
plot_summary_curve(time = time, obj = excHaz, region = region, ylab = "Excess Hazard", dist = dist, return_values = T)
plot_summary_curve(time = time, obj = excCumHaz, region = region, ylab = "Excess Cumulative Hazard", dist = dist, return_values = T)
plot_summary_curve(time = time, obj = netSur, region = region, dist = dist, return_values = T)
plot_all_regions(time = time, obj = excHaz, N_reg = N_reg, ylab = "Excess Hazard", dist = dist, return_values = T)
plot_all_regions(time = time, obj = excCumHaz, N_reg = N_reg, ylab = "Excess Cumulative Hazard", dist = dist, pos_legend = "topleft", return_values = T)
plot_all_regions(time = time, obj = netSur, N_reg = N_reg, dist = dist, return_values = T)
par(family = 'LM Roman 10', mfrow = c(1, 3))
pL <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "L", title = "Net Survival (.025)", commom_legend = T)
pM <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "M", title = "Net Survival (mean)", commom_legend = T)
pU <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "U", title = "Net Survival (.975)", commom_legend = T)
grid.arrange(pL, pM, pU, nrow = 1, ncol = 3)
r$time_taken
source("header.R")
data <- readRDS(file = "DATA/leuk.rds")
# Optional
data$age <- scale(data$age)
data$wbc <- scale(data$wbc)
data$dep <- scale(data$dep)
map <- readRDS(file = "DATA/nwengland_map.rds")
adj_info <- adj_list(map = map)
model <- "LL_ABST"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
d <- data_stan(data = data, model = model, cov.tilde = c("age"), cov = c("age", "wbc", "sex", "dep"), nonlinear = c(), adj_info = adj_info)
r <- fit_stan(data = d, model = model)
fit <- r$fit
print(fit, pars = c("log_lik"), include = F)
## Model comparison
loo <- compute_loo(fit = fit)
# loo_compare(list(M1 = loo1, M2 = loo2))
bridge <- bridge_sampler(samples = fit, cores = getOption(x = "mc.cores", default = detectCores()), silent = T)
# bayes_factor(x1 = bridge1, x2 = bridge2)
# saveRDS(object = bridge, file = paste("FITTED_MODELS/", dist, "/bridge_", model, ".rds", sep = ""))
## Result processing
time <- seq(from = 0.025, to = 4, by = 0.025)
mu_age <- attr(x = data$age, which = "scaled:center")
sd_age <- attr(x = data$age, which = "scaled:scale")
age <- 40 + time
age <- (age - mu_age) / sd_age
X_tilde <- matrix(data = c(age), ncol = 1, byrow = F)
X <- matrix(data = c(age, rep(1, length(time)), rep(0.5, length(time)), rep(1.2, length(time))), ncol = 4, byrow = F)
res <- result_processing(fit = fit, model = model, time = time, X_tilde = X_tilde, X = X)
excHaz    <- res$excHaz
excCumHaz <- res$excCumHaz
netSur    <- res$netSur
## Visualization
region <- 1
par(family = 'LM Roman 10', mfrow = c(1, 1))
plot_summary_curve(time = time, obj = excHaz, region = region, ylab = "Excess Hazard", dist = dist, return_values = T)
plot_summary_curve(time = time, obj = excCumHaz, region = region, ylab = "Excess Cumulative Hazard", dist = dist, return_values = T)
plot_summary_curve(time = time, obj = netSur, region = region, dist = dist, return_values = T)
par(family = 'LM Roman 10', mfrow = c(1, 3))
pL <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "L", title = "Net Survival (.025)", commom_legend = T)
pM <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "M", title = "Net Survival (mean)", commom_legend = T)
pU <- plot_map(map = map, obj = netSur, t = which(time == 1), summary = "U", title = "Net Survival (.975)", commom_legend = T)
grid.arrange(pL, pM, pU, nrow = 1, ncol = 3)
source("header.R")
data <- readRDS(file = "DATA/leuk.rds")
# Optional
data$age <- scale(data$age)
data$wbc <- scale(data$wbc)
data$dep <- scale(data$dep)
map <- readRDS(file = "DATA/nwengland_map.rds")
adj_info <- adj_list(map = map)
model <- "PGWABXX"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
d <- data_stan(data = data, model = model, cov.tilde = c("age"), cov = c("age", "wbc", "sex", "dep"), nonlinear = c(), adj_info = adj_info)
r <- fit_stan(data = d, model = model)
fit <- r$fit
print(fit, pars = c("log_lik"), include = F)
a <- seq(0, 5, 0.1)
a
plot(a, pnorm(a))
plot(a, qnorm(a))
plot(a, dnorm(a))
plot(a, dlnorm(a))
plot(a, dlnorm(a, 0, 5))
plot(a, dlnorm(a, 0, 5), type = 'l')
plot(a, log(dnorm(a, 0, 5)), type = 'l')
hist(rnorm(1000))
hist(log(rnorm(1000)))
hist(log(rnorm(1000))
hist(log(rnorm(1000)))
hist(log(rnorm(1000)))
hist(log(rnorm(1000)))
hist(norm(10000))
hist(norm(10000)))
hist(rnorm(10000))
hist(exp(rnorm(10000)))
hist((rlnorm(10000)))
hist((rlnorm(10000)), ylim = c(0, 10))
hist((rlnorm(10000)), xlim = c(0, 10))
hist((rlnorm(10000)), xlim = c(0, 10), bins = 100)
hist((rlnorm(10000)), xlim = c(0, 10), breaks = seq(0, 10, 0.5))
hist((rlnorm(10000)), xlim = c(0, 10), breaks = seq(0, 10, 1))
hist((rlnorm(10000)), xlim = c(0, 10)
)
hist((rlnorm(10000)), xlim = c(0, 10)
)
hist((rlnorm(10000)), xlim = c(0, 10))
hist((rlnorm(10000)), xlim = c(0, 10))
hist(exo(norm(10000)), xlim = c(0, 10))
hist(exp(norm(10000)), xlim = c(0, 10))
hist(exp(rnorm(10000)), xlim = c(0, 10))
hist(exp(rnorm(10000)), xlim = c(0, 10))
hist(exp(rnorm(10000)), xlim = c(0, 10))
hist(exp(rnorm(10000)), xlim = c(0, 10))
hist(exp(rnorm(10000)), xlim = c(0, 10))
hist(exp(rnorm(10000)), xlim = c(0, 10))
hist(exp(rnorm(10000)), xlim = c(0, 10))
hist(exp(rnorm(10000)), xlim = c(0, 10))
hist(exp(rnorm(10000)), xlim = c(0, 10))
hist(exp(rnorm(10000, 0, 5)), xlim = c(0, 10))
hist(exp(rnorm(10000, 0, 5)), xlim = c(0, 10))
hist(exp(rnorm(10000, 0, 5)), xlim = c(0, 10))
hist(exp(rnorm(10000, 0, 5)), xlim = c(0, 10))
hist(exp(rnorm(10000, 0, 5)), xlim = c(0, 10))
hist(exp(rnorm(10000, 0, 5)), xlim = c(0, 10))
hist(exp(rnorm(10000, 0, 5)), xlim = c(0, 10))
hist(exp(rnorm(10000, 0, 5)), xlim = c(0, 10))
hist(exp(rnorm(10000, 0, 5)), xlim = c(0, 10))
hist(exp(rnorm(10000, 0, 5)), xlim = c(0, 10))
hist(exp(rnorm(10000, 0, 5)), xlim = c(0, 10))
hist(exp(rnorm(10000, 0, 5)), xlim = c(0, 10))
hist(exp(rnorm(10000, 0, 5)), xlim = c(0, 10))
hist(exp(rnorm(10000, 0, 5))
hist(exp(rnorm(10000, 0, 5))
hist(exp(rnorm(10000, 0, 5)))
plot(a, dnorm(x), type = 'l')
plot(a, dnorm(a), type = 'l')
plot(a, dnorm(a, 0, 5), type = 'l')
a <- seq(0, 10, 0.005)
plot(a, dnorm(a, 0, 5), type = 'l')
plot(a, dlnorm(a, 0, 5), type = 'l')
plot(a, dlnorm(a, 0, 1), type = 'l')
plot(a, dlnorm(a, 0, 5), type = 'l')
?dlnorm
plot(a, dlnorm(a, 0, exp(5)), type = 'l')
plot(a, dlnorm(a, 0, exp(1)), type = 'l')
plot(a, dlnorm(a, 0, exp(5)), type = 'l')
plot(a, dlnorm(a, 0, 1, type = 'l')
plot(a, dlnorm(a, 0, 1, type = 'l', log.p = F)
plot(a, dlnorm(a, 0, 1, type = 'l', log.p = F))
plot(a, dlnorm(a, 0, 1, log.p = F))
plot(a, dlnorm(a, 0, 1, log = F))
plot(a, dlnorm(a, 0, 1, log = F), type = 'l')
plot(a, dlnorm(a, 0, 5, log = F), type = 'l')
plot(a, dlnorm(a, 0, log(5), log = F), type = 'l')
plot(a, dlnorm(a, 0, log(1), log = F), type = 'l')
n <- rlnorm(1000, 0, 5)
sd(n)
log(sd(n))
n <- rlnorm(100000, 0, 5)
sd(n)
log(sd(n))
sd(log(n))
?dlnorm
lnprior <- Vectorize(function(t) dnorm(log(t), 0, 5)/t)
curve(lnprior, 0, 10, n = 1000, lwd = 2)
lnprior <- Vectorize(function(t) dnorm(log(t), 0, 1)/t)
curve(lnprior, 0, 10, n = 1000, lwd = 2)
Ç
Mohammed Alsaleem
hcprior <- Vectorize(function(t) dcauchy(t, 0, 1))
curve(hcprior, 0, 10, n = 1000, lwd = 2)
z <- c(1,2,3)
w <- c(4, 5, 6)
outer(z, w)
z%o% w
diag(2)
diag(2, 5, 5)
library('dplyr')
?n_distinct
?smp1
r <- readRDS(file = paste("FITTED_MODELS/", "LN", "/", "LN_ABCD", ".rds", sep = ""))
fit <- r$fit
print(fit, pars = c("log_lik"), include = F)
r <- readRDS(file = paste("FITTED_MODELS/", "LN", "/", "LN_ABXD", ".rds", sep = ""))
fit <- r$fit
print(fit, pars = c("log_lik"), include = F)
r <- readRDS(file = paste("FITTED_MODELS/", "LN", "/", "LN_ABCD", ".rds", sep = ""))
fit <- r$fit
print(fit, pars = c("log_lik"), include = F)
r <- readRDS(file = paste("FITTED_MODELS/", "LN", "/", "LN_ABCC", ".rds", sep = ""))
fit <- r$fit
print(fit, pars = c("log_lik"), include = F)
r <- readRDS(file = paste("FITTED_MODELS/", "LN", "/", "LN_XBXD", ".rds", sep = ""))
fit <- r$fit
print(fit, pars = c("log_lik"), include = F)
r <- readRDS(file = paste("FITTED_MODELS/", "LN", "/", "LN_AACC", ".rds", sep = ""))
fit <- r$fit
print(fit, pars = c("log_lik"), include = F)
library(hhh4)
install.packages("hhh4")
library(surveillance)
data("measlesWeserEms")
measlesWeserEms
?measlesWeserEms
measlesWeserEms@
-
measlesWeserEms@observed
ncol(weser)
ncol(measlesWeserEms)
source("header.R")
model <- "LN_XXXX"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
r <- readRDS(file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
fit <- r$fit
print(fit, pars = c("log_lik"), include = F)
print(fit, pars = c("log_lik"), include = F)
source("header.R")
model <- "LN_ABST"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
r <- readRDS(file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
fit <- r$fit
print(fit, pars = c("log_lik"), include = F)
source("header.R")
model <- "LN_XXXX"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
r <- readRDS(file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
fit <- r$fit
print(fit, pars = c("log_lik"), include = F)
source("header.R")
model <- "LN_ABCD"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
r <- readRDS(file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
fit <- r$fit
# Visualization
print(fit, pars = c("log_lik"), include = F)
model <- "LN_XXXX"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
r <- readRDS(file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
fit <- r$fit
model <- "LN_ABCD"
data <- readRDS(file = "DATA/leuk.rds")
map <- readRDS(file = "DATA/nwengland_map.rds")
time <- seq(from = 0.025, to = 4, by = 0.025)
mu_age <- mean(data$age)
sd_age <- sd(data$age)
age <- 40 + time
age <- (age - mu_age) / sd_age
X_tilde <- matrix(data = c(age), ncol = 1, byrow = F)
X <- matrix(data = c(age, rep(1, length(time)), rep(0.5, length(time)), rep(1.2, length(time))), ncol = 4, byrow = F)
res <- result_processing(fit = fit, model = model, time = time, X_tilde = X_tilde, X = X)
excHaz <- res$excHaz
excCumHaz <- res$excCumHaz
netSur <- res$netSur
region <- 1
par(family = 'LM Roman 10', mfrow = c(1, 1))
plot_summary_curve(time = time, obj = excHaz, region = region, ylab = "Excess Hazard", dist = dist, return_values = T)
plot_summary_curve(time = time, obj = excCumHaz, region = region, ylab = "Excess Cumulative Hazard", dist = dist, return_values = T)
plot_summary_curve(time = time, obj = netSur, region = region, dist = dist, return_values = T)
print(fit, pars = c("log_lik"), include = F)
print(fit, pars = c("log_lik", "u", "u_tilde", "v", "v_tilde"), include = F)
source("header.R")
model <- "LL_ABCD"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
r <- readRDS(file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
fit <- r$fit
print(fit, pars = c("log_lik"), include = F)
model <- "LN_ABCD"
model <- "LN_ABCD"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
r <- readRDS(file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
fit <- r$fit
# Visualization
print(fit, pars = c("log_lik"), include = F)
source("header.R")
model <- "LN_XXXX"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
r <- readRDS(file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
fit <- r$fit
print(fit, pars = c("log_lik"), include = F)
model <- "LL_ABCD"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
r <- readRDS(file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
fit <- r$fit
print(fit, pars = c("log_lik", "u", "u_tilde", "v", "v_tilde"), include = F)
model <- "LL_ABST"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
r <- readRDS(file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
fit <- r$fit
print(fit, pars = c("log_lik", "u", "u_tilde", "v", "v_tilde"), include = F)
source("header.R")
model <- "LL_XXXX"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
r <- readRDS(file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
fit <- r$fit
source("header.R")
model <- "LL_XXXX"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
r <- readRDS(file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
fit <- r$fit
source("header.R")
model <- "LN_XXXX"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
r <- readRDS(file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
fit <- r$fit
print(fit, pars = c("log_lik"), include = F)
print(fit, pars = c("log_lik", "u", "u_tilde", "v", "v_tilde"), include = F)
model <- "LN_XXXX"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
r <- readRDS(file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
fit <- r$fit
print(fit, pars = c("log_lik", "u", "u_tilde", "v", "v_tilde"), include = F)
model <- "LN_ABCD"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
r <- readRDS(file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
fit <- r$fit
print(fit, pars = c("log_lik", "u", "u_tilde", "v", "v_tilde"), include = F)
print(fit, pars = c("log_lik"), include = F)
traceplot(object = fit, pars = c("log_lik", "energy__", "lp__", "v", "v_tilde", "u", "u_tilde"), include = F)
traceplot(object = fit, pars = c("log_lik", "energy__", "lp__", "v", "v_tilde", "u", "u_tilde"), include = F)
source("header.R")
model <- "GAMABCD"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
r <- readRDS(file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
fit <- r$fit
model <- "GAMABCD"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
r <- readRDS(file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
model <- "GAMABXX"
dist <- gsub(pattern = "_", replacement = "", x = substring(text = model, first = c(1, 4), last = c(3, 7))[1])
r <- readRDS(file = paste("FITTED_MODELS/", dist, "/", model, ".rds", sep = ""))
fit <- r$fit
print(fit, pars = c("log_lik", "u", "u_tilde", "v", "v_tilde"), include = F)
print(fit, pars = c("log_lik"), include = F)
pairs(x = fit, pars = c("log_lik", "energy__", "lp__", "v", "v_tilde", "u", "u_tilde"), include = F)
models <- c("LN_ABCD", "LN_ABST", "LL_ABCD", "LL_ABST")
distributions <- sapply(X = models, FUN = function (x) { gsub(pattern = "_", replacement = "", x = substring(text = x, first = c(1, 4), last = c(3, 7))[1]) })
fits <- list()
loos <- list()
for (i in 1:length(models)) {
print(i)
temp <- readRDS(file = paste("FITTED_MODELS/", distributions[i], "/", models[i], ".rds", sep = ""))
fits[[i]] <- temp$fit
loos[[i]] <- compute_loo(fit = fits[[i]])
# I can also include the Bayes Factor, but I have to save the "bridge_sampler()" object when fitting the model. See commit #36
}
loo_compare(loos) # Refitting the model for the outliers, or relying only on the Bayes Factor
